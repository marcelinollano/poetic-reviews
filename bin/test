#!/usr/bin/env ruby

require 'rubygems'
require 'bundler'
Bundler.require
Dotenv.load

Dir["./lib/*.rb"].each { |file| require file }


puts Translate.to_english("This really is cool")

# response = Split.to_sentences("This is the end of the world. And you know it.")
# response.sentences.each do |sentence|
#   p sentence.text.content
# end

# thing = Thing.first
# thing.reviews.each do |review|
#   puts review.text
# end


# Sentiment
# NOTE: Google is not great with passive-aggressive sentences
# text = "Lo has hecho muy bien para alguien con tu nivel de educación"
# require "google/cloud/language"
# language = Google::Cloud::Language.new
# response = language.analyze_sentiment content: text, type: :PLAIN_TEXT
# sentiment = response.document_sentiment
# puts "Text: #{text}"
# puts "Score: #{sentiment.score}, #{sentiment.magnitude}"

# Syntax
# require "google/cloud/language"
# text_content = "And to address the issues about decimals not being accurate."
# language = Google::Cloud::Language.new
# response = language.analyze_syntax content: text_content, type: :PLAIN_TEXT
# sentences = response.sentences
# tokens    = response.tokens
# puts "Sentences: #{sentences.count}"
# puts "Tokens: #{tokens.count}"

# Translation
# require "google/cloud/translate"
# translate = Google::Cloud::Translate.new(project_id: "poetry-slash")
# translation = translate.translate "Hello world!", to: "es"
# puts translation

# Syllabes
# TODO: Needs to strip more than spaces
# require './lib/syllabes.rb'
# source = "el camión iba muy rápido"
# word = Syllabes.new(source)
# word.process
# output = Array.new
# word.syllabes.size.times do |position|
#   starting = word.syllabes[position]
#   ending   = word.syllabes[position+1].nil? ? -1 : word.syllabes[position+1] - 1
#   output <<  source.slice(starting..ending)
# end
# puts "#{output.join('-').delete(' ')} (#{word.num_syl})"

# Maps
# Types https://developers.google.com/places/web-service/supported_types
# params = {:query => 'hola cafe madrid', :type => 'cafe', :key => ENV['GOOGLE_MAPS_API_KEY']}
# response = Curl.get('https://maps.googleapis.com/maps/api/place/textsearch/json', params)
# place_id = JSON.parse(response.body_str)['results'][0]['place_id']
# params = {:placeid => place_id, :key => ENV['GOOGLE_MAPS_API_KEY']}
# response = Curl.get('https://maps.googleapis.com/maps/api/place/details/json', params)
# puts response.body_str

# file = File.open("test/fixtures/google-maps-places.json", "rb")
# contents = file.read
# json = JSON.parse(contents)
# puts json['result']['reviews'].size
